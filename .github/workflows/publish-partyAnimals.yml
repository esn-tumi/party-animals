name: Build Docker for Party Animals

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  schedule:
    - cron: '43 11 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
    paths:
      - 'party-animals/**'
      - 'Dockerfile-PartyAnimals'
      - '.github/workflows/publish-partyAnimals.yml'
      - 'infrastructure/party-animals.yml'
      - 'yarn.lock'
#  pull_request:
#    branches: [ main ]
#    paths:
#      - 'party-animals/**'
#      - 'Dockerfile-PartyAnimals'
#      - '.github/workflows/publish-partyAnimals.yml'
#      - 'infrastructure/party-animals.yml'
#      - 'yarn.lock'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v3

#      - name: Create Sentry release
#        uses: getsentry/action-release@v1
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#        with:
#          environment: production
#          ignore_empty: true
#          projects: tumi-server

      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::sha-$(git rev-parse --short HEAD)"

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7cc35d7fdbe70d4278a0c96779081e6fac665f88
        with:
          cosign-release: 'v1.4.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@95cb08cb2672c73d4ffd2f422e6d11953d2a9c70

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@12cce9efe0d49980455aaaca9b071c0befcdd702
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/party-animals
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          file: Dockerfile-PartyAnimals
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
#       - name: Sign the published Docker image
#         if: ${{ github.event_name != 'pull_request' }}
#         env:
#           COSIGN_EXPERIMENTAL: "true"
#         # This step uses the identity token to provision an ephemeral certificate
#         # against the sigstore community Fulcio instance.
#         run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/party-animals@${{ steps.build-and-push.outputs.digest }}
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://party-animals.esn.world
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: update image tag in deployment file
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: infrastructure/party-animals.yml
          find: 'main'
          replace: ${{ needs.build.outputs.sha_short }}

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Installing containerapp extension"
            az extension add -n containerapp --yes
            echo "Starting Deploying"
            az containerapp update -n party-animals -g tumi-container --yaml $GITHUB_WORKSPACE/infrastructure/party-animals.yml
