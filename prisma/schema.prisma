// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  //  previewFeatures = ["dataProxy"]
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum Status {
  PENDING
  CANCELLED
  REJECTED
  ACCEPTED
}

enum PaymentStatus {
  PENDING
  SUCCESS
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum GroupType {
  PA
  CC
}

model User {
  id            String         @id @default(uuid()) @db.Uuid
  createdAt     DateTime       @default(now())
  /// Id from auth0 for this user
  authId        String         @unique
  role          Role           @default(USER)
  firstName     String
  lastName      String
  email         String         @unique
  photo         String         @default("")
  registrations Registration[]
}

model Registration {
  id                 String        @id @default(uuid()) @db.Uuid
  createdAt          DateTime      @default(now())
  user               User          @relation(fields: [userId], references: [id])
  userId             String        @db.Uuid
  registrationStatus Status        @default(PENDING)
  paymentStatus      PaymentStatus @default(PENDING)
  rejectionReason    String?
  priority           Priority      @default(MEDIUM)
  // Personal data
  gender             String
  callBy             String
  phone              String
  country            String
  university         String
  status             String
  diet               String
  esnSection         String?
  languages          String?
  // Programme data
  programme          String
  oldie              Boolean
  expectations       String
  requests           String?
  // Assignment
  group              Group?        @relation(fields: [groupId], references: [id], onDelete: SetNull)
  groupId            String?       @db.Uuid
}

model Group {
  id            String         @id @default(uuid()) @db.Uuid
  createdAt     DateTime       @default(now())
  name          String         @unique
  description   String         @default("")
  groupType     GroupType
  registrations Registration[]
}
